<!-- Free discount progress markup -->
<div class="cart-discount__wrapper" data-cart-type="{{settings.cart_discount_type}}">
  <p class="cart-discount__numOuter">{{ settings.cart_discount_message }}</p>
  <p class="cart-discount__success">{{ settings.cart_discount_success_message }}</p>
  <div class="cart-discountThreshold__bar">
    <span class="cart-discountThreshold__progress"></span>
  </div>
  
{% assign numberOfProducts = settings.cart_discount_product_total %}

<script>
 var specific_product = [];
{% for i in (1..numberOfProducts) %}
  {% assign variableName = 'cart_discount_product_' | append: i %}
  {% assign productValue = settings[variableName] %}
   {% assign product = all_products[productValue] %}
    {% if product != blank  %}
        specific_product.push({{ product.id }});
    {% endif %}
{% endfor %}
</script>
  
</div>

<style>
.cart-discount__wrapper {
  padding: 15px;
  max-width: 700px;
  margin: 0 auto;
}

.cart-discountThreshold__bar {
  position: relative;
  /*  Progress bar background color  */
  background-color: #d8d8d8;
  height: 1rem;
}

.cart-discountThreshold__progress {
  position: absolute;
  top: 0;
  left: 0;
  min-width: 0;
  max-width: 100%;
  height: 100%;
  display: block;
  /*  Progress bar fill color  */
  background-color: var(--color-accent-header); 
}
</style>

<script>
calculateDiscount();
function calculateProgress(currentVal, targetVal) {
  var progressBar = document.querySelectorAll('.cart-discountThreshold__progress');
  var progressNum = document.querySelectorAll('.cart-discount__num');
  var progressOuter = document.querySelectorAll('.cart-discount__numOuter');
  var successMsg = document.querySelectorAll('.cart-discount__success');

  
  // calculate how far progress is from the total as a percentage
  var result = Math.round(100 * currentVal / targetVal);
  progressBar.forEach(function(el){
    el.setAttribute('style', "width: ".concat(result, "%"));
  })
   // Update the progess text. If threshold is met, show success message
  var newProgressNum = targetVal - currentVal;
  if(newProgressNum <= 0){
    successMsg.forEach(function(el){
      el.style.display = 'block';
    });
    progressOuter.forEach(function(el){
      el.style.display = 'none';
    });
    progressNum.forEach(function(el){
      el.textContent = newProgressNum;
    });
  } else {
    successMsg.forEach(function(el){
      el.style.display = 'none';
    });
    progressOuter.forEach(function(el){
      el.style.display = 'block';
    });
    progressNum.forEach(function(el){
      el.textContent = newProgressNum;
    });
  }
};
function calculateDiscount(){
fetch('/cart.js')
.then(response => response.json())
.then(data => {
  var total_qry = 0;
  var cart_discount__wrapper = document.querySelectorAll(".cart-discount__wrapper");
  var discount_type = cart_discount__wrapper[0].getAttribute('data-cart-type');
  if(discount_type == "specific")
  {
     let dataItem = data.items;
      const product_list = [];
      for(var i=0; i < dataItem.length; i++){
          if (specific_product.includes(dataItem[i].product_id))
          {
            total_qry = total_qry + dataItem[i].quantity;
          }
      }
  }
  else
  {
    total_qry = data.item_count;
  }
  calculateProgress(total_qry, {{settings.cart_discount_theshold}});
});
}
</script>